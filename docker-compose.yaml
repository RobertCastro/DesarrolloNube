version: "3.8"

networks:
  dev-cloud-network:
        driver: bridge

services:
  #nginx:
    #image: nginx:latest
    #ports:
    #  - 5000:80
    #volumes:
    #    - ./src/nginx/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
    # depends_on:
    #TODO: agregar servicios de los que depende

  backend:
    container_name: backend
    build:
      context: ./src/backend  # Ruta donde se encuentra el Dockerfile
      dockerfile: Dockerfile  # Nombre del Dockerfile
    ports:
      - "8000:8000"
    networks:
      - dev-cloud-network
  broker_video:
    image: rabbitmq:3-management
    container_name: broker_video
    ports:
      - "5672:5672"  # AMQP
      - "15672:15672"  # RabbitMQ Management UI
    networks:
      - dev-cloud-network
    volumes:
      - broker_video_data:/var/lib/broker_video_data

  db:
    container_name: idlr_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: idlr_db
    image: "postgres:latest"
    networks:
      - dev-cloud-network
    ports:
      - "5432:5432"
    volumes:
      - ${PWD}/src/database/postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # worker:
  #TODO: agregar servicio de worker

volumes:
  pg-data:
    driver: local
  broker_video_data:
  #definicion volume videos
  #videos_sin_editar:
  #- src/uploads/videos_sin_editar
  #videos_editados:
  #- src/uploads/videos_editados